
#include "pid.h"
// Funzione per inizializzare il regolatore PID
void pid_init(PIDController *pid, float setpoint, float kp, float ki, float kd) {
    pid->setpoint = setpoint;
    pid->kp = kp;
    pid->ki = ki;
    pid->kd = kd;
    pid->integral = 0;
    pid->derivative = 0;
    pid->prev_error = 0;
}

// Funzione per calcolare la velocità del servomotore in base alla temperatura e all'umidità utilizzando un regolatore PID
int calculate_speed(float temperature, float humidity, PIDController *pid) {
    // Calcola l'errore attuale rispetto al valore di riferimento
    float error = pid->setpoint - (temperature + humidity) / 2;

    // Aggiorna l'integrale e il derivativo
    pid->integral += error;
    pid->derivative = error - pid->prev_error;

    // Calcola la velocità in base al regolatore PID
    int speed = round(pid->kp * error + pid->ki * pid->integral + pid->kd * pid->derivative);
    if (speed < SERVO_MIN_SPEED) {
        speed = SERVO_MIN_SPEED;
    } else if (speed > SERVO_MAX_SPEED) {
        speed = SERVO_MAX_SPEED;
    }

    // Memorizza l'errore attuale per il calcolo del derivativo al prossimo passo
    pid->prev_error = error;

    // Ritorna la velocità del servomotore
    return speed;
}

// Funzione per calcolare l'angolo del servomotore in base alla velocità
int calculate_angle(int speed) {
    // Calcola l'angolo in base alla velocità
    return SERVO_MIN_ANGLE + round((SERVO_MAX_ANGLE - SERVO_MIN_ANGLE) * speed / 100);
}

// Funzione principale per impostare la velocità del servomotore utilizzando il regolatore PID
void set_servo_speed(float temperature, float humidity, PIDController *pid) {
    // Calcola la velocità in base al regolatore PID
    int speed = calculate_speed(temperature, humidity, pid);

    // Calcola l'angolo in base alla velocità
    int angle = calculate_angle(speed);

    // Imposta la velocità del servomotore
    // In questo esempio, la funzione set_speed(angle) è fittizia e va sostituita con la funzione corretta per il controllo del servomotore
    set_speed(angle);
}
