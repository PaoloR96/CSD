*SUB_ROUTINE	MIN&MAX

			ORG		$8800
FIND_MAX_MIN	MOVEA.L	RTNOFF(SP),A2
			MOVEA.L	MTOFF(SP),A1
			MOVE.W	RGOFF(SP),D7
			MOVE.W	CLOFF(SP),D6
			MOVE.B	#1,D2
		
			CLR		D0
LOOP			CLR		D1
LOOP2			CMP.B		(A1,D1),D2
			BGE		SKIP
			MOVE.B	(A1,D1),D2
SKIP			ADD		#1,D1		
			CMP		D6,D1
			BNE		LOOP2
			ADD		D6,A1
			ADD		#1,D0
			CMP		D7,D0
			BNE		LOOP
	
			MOVEA.L	MTOFF(SP),A1
			MOVE.B	#$7F,D3
			CLR		D0
LOOPm		CLR		D1
LOOP2m		CMP.B		(A1,D1),D3
			BLE		SKIPm
			MOVE.B	(A1,D1),D3
SKIPm			ADD		#1,D1		
			CMP		D6,D1
			BNE		LOOP2m
			ADD		D6,A1
			ADD		#1,D0
			CMP		D7,D0
			BNE		LOOPm
FINE			RTS


*SUB_ROUTINE	PRENDI_INDIRIZZI

			ORG		$8900
PRENDI_INDIRIZZI	MOVEA.L	RTNOFF1(SP),A2
			MOVEA.L	MTOFF1(SP),A1
			MOVE.W	RGOFF1(SP),D7
			MOVE.W	CLOFF1(SP),D6
			MOVE.W	MAXOFF(SP),D5
			MOVE.W	MINOFF(SP),D4

			*TROVO IND MAX

			CLR		D0
LOOPind		CLR		D1
LOOPind1		CMP.B	(A1,D1),D5
			BEQ		SKIPind
			ADD		#1,D1		
			CMP		D6,D1
			BNE		LOOPind1
			ADD		D6,A1
			ADD		#1,D0
			CMP		D7,D0
			BNE		LOOPind
SKIPind		MOVE.L	A1,A2

			*TROVO IND MIN

			MOVEA.L	MTOFF1(SP),A1
			CLR		D0
LOOPind2		CLR		D1
LOOPind3		CMP.B		(A1,D1),D4
			BEQ		SKIPind2
			ADD		#1,D1		
			CMP		D6,D1
			BNE		LOOPind3
			ADD		D6,A1
			ADD		#1,D0
			CMP		D7,D0
			BNE		LOOPind2
SKIPind2		MOVE.L	A1,A1

			RTS

*SUB_ROUTINE	CHANGE_RIGA

			ORG		$8600
CHANGE_RIGA	MOVEA.L	RTNOFF2(SP),A3
			MOVE.W	RGOFF2(SP),D4
			CLR		D0
LOOPr			CMP		D4,D0
			BEQ		FINEr	
			CLR		D1
			CLR		D2
			MOVE.B	(A2),D1
			MOVE.B	(A1),D2
			MOVE.B	D1,(A1)+
			MOVE.B	D2,(A2)+
			ADD.B		#1,D0
			BRA		LOOPr
FINEr			RTS


		
*MAIN
		
		
		ORG		$8500
INIZIO		MOVE.W	CL,-(SP)
		MOVE.W	RG,-(SP)
		MOVE.L	#MT,-(SP)

		*TROVO	MAX

		JSR		FIND_MAX_MIN
		ADDA		#8,SP
		MOVE.W	D2,MAX
		MOVE.W	D3,MIN
		CLR		D0
		CLR		D1
		CLR		D2
		CLR		D3
		CLR		D6
		CLR		D7
		*PRENDI_INDIRIZZI

	
		MOVE.W	CL,-(SP)
		MOVE.W	RG,-(SP)
		MOVE.L	#MT,-(SP)
		MOVE.W	MAX,-(SP)
		MOVE.W	MIN,-(SP)
	
		JSR		PRENDI_INDIRIZZI
		ADDA		#12,SP
		CLR		D0
		CLR		D1
		CLR		D2
		CLR		D3
		CLR		D4
		CLR		D5
		CLR		D6
		CLR		D7

		*CHANGE_RIGA

		MOVE.W	RG,-(SP)
		JSR		CHANGE_RIGA
STOP		JMP		STOP
		

				

	

		
		
		
		
*AREA	DATI
		ORG		$8000
MT		DC.B		33,2,55,11,10,4,99,11,22
N		EQU		3
M		EQU		3
RG		DC.W		N
CL		DC.W		M
MAX		DS.W		1
MIN		DS.W		1

*OFFSET STACK_MAX_MIN

RTNOFF		EQU		0
MTOFF		EQU		4
RGOFF		EQU		8
CLOFF		EQU		10

*OFFSET STACK_FIND_IND

RTNOFF1	EQU		0
MINOFF	EQU		4
MAXOFF	EQU		6
MTOFF1	EQU		8
RGOFF1	EQU		12
CLOFF1	EQU		14



*OFFSET STACK_CHANGE

RTNOFF2	EQU		0
RGOFF2	EQU		4



		END		INIZIO




